{"version":3,"sources":["double-bubble-outline/double-bubble-outline.png","components/NotFound.js","components/About.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","NotFound","props","className","to","About","engine","Styletron","value","debug","debugAfterHydration","theme","colors","black900","textColor","minH","w","d","flexDir","align","textSize","p","x","y","bgImg","bubbleground","bgSize","textAlign","l","r","onClick","e","preventDefault","window","location","href","prefix","name","size","color","m","bg","rounded","shadow","hoverShadow","grid","gutterWidth","App","exact","path","hoverTextColor","justify","hoverBg","minW","border","borderColor","component","Component","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.b5bff172.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/double-bubble-outline.cdeb83f7.png\";","import React from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\nconst NotFound = props => (\r\n    <article className = \"not-found-container\">\r\n    <h1>\r\n        Error 404\r\n    </h1>\r\n    <p>\r\n    Content not found.\r\n    <Link to=\"/\">Return to home</Link>\r\n    </p>\r\n    </article>\r\n);\r\n\r\nexport default NotFound","import React from 'react'\r\nimport {BrowserRouter as Router, Switch, Route, Link, Redirect} from 'react-router-dom';\r\nimport {Provider as StyletronProvider, DebugEngine} from 'styletron-react';\r\nimport {Client as Styletron} from 'styletron-engine-atomic';\r\nimport {Div, Button, Icon, Text, Row, Col, Container, StyleReset, ThemeProvider} from 'atomize';\r\nimport bubbleground from '../double-bubble-outline/double-bubble-outline.png'\r\n\r\nconst About = props => {\r\n    \r\n    const debug = process.env.NODE_ENV === \"production\" ? void 0 : new DebugEngine();\r\n    //Create a client engine instance\r\n    const engine = new Styletron();\r\n\r\n    const theme = {\r\n        colors: {\r\n          black900: \"1d1d1e\"\r\n        }\r\n      };  \r\n\r\n    return(\r\n        <StyletronProvider value = {engine} debug={debug} debugAfterHydration>\r\n            <ThemeProvider theme={theme}>\r\n                <StyleReset />\r\n                    <Div\r\n                    textColor = \"black900\"\r\n                    minH=\"auto\" //Yeah idk how to make this fill hopefully it scales\r\n                    w=\"100vw\"\r\n                    d=\"flex\"\r\n                    flexDir=\"column\"\r\n                    align=\"flex-start\"\r\n                    textSize=\"display2\"\r\n                    p={{x:\"1rem\", y: \"5rem\"}}\r\n                    bgImg = {bubbleground}\r\n                    bgSize = \"contain\"\r\n                    >\r\n                        A Little About Me\r\n                        <Text\r\n                        textColor = \"black600\"\r\n                        textSize = \"title\"\r\n                        textAlign = \"center\"\r\n                        p={{l:\"3rem\", r:\"3rem\", y:\"2rem\"}}\r\n                        >\r\n                            I grew up in the Bay Area before heading off the the East Coast to attend Johns Hopkins University.\r\n                            I had a thing for chemistry in high school, so at first I entered as a Chemical & Biomolecular \r\n                            Engineering (ChemBE) major, but I soon realized that ChemBE was less chemistry and more a flavor of\r\n                            math I wasn't a huge fan of (like no offense but solving triple integrals to find heat flux down a pipe\r\n                            just isn't my thing). So then I ended up in Materials Science & Engineering (MSE), which was more chemistry \r\n                            less math and have been there ever since. Oh and I also picked up a CS minor along the way, and for some\r\n                            reason I do a lot more CS stuff now. Probably because CS requires a computer and a lot of patience, whereas\r\n                            MSE requres a whole lab and a lot of patience but who knows.  \r\n                        </Text> \r\n                        About This Website\r\n                        <Text\r\n                        textColor = \"black600\"\r\n                        textSize = \"title\"\r\n                        textAlign = \"center\"\r\n                        p={{l:\"3rem\", r:\"3rem\", y:\"2rem\"}}\r\n                        >\r\n                            Frankly, the only reason this website exists is because I got sort of put in a leadership role for\r\n                            this research project that would need a website at some point. In other words I had a week to decide\r\n                            between React or Angular (sorry Vue) JS. React won. And this grew out of my despereate attempt to wrap\r\n                            my head around React during that process. I'll be the first to admit that the way I built this website\r\n                            might be...abnormal to say the least. But there's still a lot I'm trying to learn. \r\n                        </Text>\r\n                    </Div>\r\n                    <Div\r\n                    minH=\"auto\" //Yeah idk how to make this fill hopefully it scales\r\n                    w=\"100vw\"\r\n                    d=\"flex\"\r\n                    flexDir=\"column\"\r\n                    align=\"flex-start\"\r\n                    >\r\n                        <Button \r\n                        onClick={(e) => {\r\n                        e.preventDefault();\r\n                        window.location.href=\"/\"\r\n                        }}\r\n                        prefix={\r\n                            <Icon\r\n                                name=\"HomeSolid\"\r\n                                size=\"25px\"\r\n                                color=\"white\"\r\n                                m={{r: \"0.5rem\"}}\r\n                            />\r\n                            }\r\n                            bg=\"info600\"\r\n                            rounded=\"circle\"\r\n                            p={{r:\"1.5rem\", l: \"1rem\"}}\r\n                            shadow=\"3\"\r\n                            hoverShadow=\"4\"\r\n                            align=\"center\"\r\n                        >\r\n                            Home\r\n                        </Button>\r\n                    </Div>\r\n            </ThemeProvider>\r\n        </StyletronProvider>\r\n    );\r\n}\r\n\r\nexport default About","import React, {Component} from 'react';\nimport {BrowserRouter as Router, Switch, Route, Link, Redirect} from 'react-router-dom';\nimport {Provider as StyletronProvider, DebugEngine} from 'styletron-react';\nimport {Client as Styletron} from 'styletron-engine-atomic';\nimport {Div, Button, Icon, Text, Row, Col, Container, StyleReset, ThemeProvider} from 'atomize';\nimport NotFound from './components/NotFound'\nimport About from './components/About'\nimport bubbleground from './double-bubble-outline/double-bubble-outline.png'\n/*Background image from Toptal Subtle Patterns*/\n\nconst debug = process.env.NODE_ENV === \"production\" ? void 0 : new DebugEngine();\n//Create a client engine instance\nconst engine = new Styletron();\n\nconst theme = {\n  colors: {\n    black900: \"1d1d1e\"\n  },\n  grid: {\n    gutterWidth: \"5rem\"\n  }\n};  \n\nclass App extends Component {\n  render() {\n    return(\n      <StyletronProvider value = {engine} debug={debug} debugAfterHydration>\n        <ThemeProvider theme={theme}>\n          <StyleReset />\n            <Router>\n              <Switch>\n                <Route exact path=\"/\">\n                  <Div\n                    textColor = \"black900\"\n                    minH=\"35vh\"\n                    w=\"100vw\"\n                    d=\"flex\"\n                    flexDir=\"column\"\n                    align=\"center\"\n                    textSize=\"display3\"\n                    p={{x:\"1rem\", y: \"10rem\"}}\n                    bgImg = {bubbleground}\n                    bgSize = \"contain\"\n                  >\n                    Hi, my name's Mathias \n                    <Text\n                      d = \"flex\"\n                      textSize = \"heading\"\n                      m = \"3rem\"\n                      w = \"70rem\"\n                      textAlign = \"center\"\n                      hoverTextColor=\"info700\"\n                    >\n                    I'm a student at the Johns Hopkins University studying Materials Science & Engineering\n                    and Computer Science.\n                    </Text>\n                  </Div>\n                  <Container\n                    w=\"100rem\"\n                    d=\"flex\"\n                    flexDir=\"column\"\n                    align=\"center\"\n                    bg = \"sucess100\"\n                    minH = \"10rem\"\n                  >\n                  {\n                    //The row is where the three panels with the links are being held. The row has\n                    //three columns, each column holds a div, and embedded in the div is the button\n                    <Row d = \"flex\" flexDir = \"row\" justify = \"space-between\">\n                        <Col size=\"4\" bg = \"sucess100\" p=\"4rem\">\n                          <Div \n                            d=\"flex\"\n                            p=\"1rem\" \n                            bg = \"success100\" \n                            hoverBg = \"gray500\"\n                            rounded = \"md\" \n                            minW = \"8rem\" \n                            minH = \"10rem\"\n                            align=\"center\"\n                            shadow=\"5\"\n                            border=\"3px solid\"\n                            borderColor=\"gray400\"\n                          >\n                            <Button \n                            onClick={(e) => {\n                              e.preventDefault();\n                              window.location.href=\"/About\"\n                              \n                            }}\n                            prefix={\n                              <Icon\n                                name=\"Loading2\"\n                                size=\"30px\"\n                                color=\"white\"\n                                m={{r: \"0.5rem\"}}\n                              />\n                            }\n                            bg=\"info600\"\n                            rounded=\"circle\"\n                            p={{r:\"1.5rem\", l: \"1rem\"}}\n                            shadow=\"3\"\n                            hoverShadow=\"4\"\n                          >\n                            About\n                          </Button> \n                          </Div>\n                        </Col>\n                        <Col size=\"4\" bg = \"sucess100\" p=\"4rem\">\n                          <Div \n                            d = \"flex\"\n                            p=\"1rem\" \n                            bg = \"success100\" \n                            hoverBg = \"gray500\"\n                            rounded = \"md\" \n                            minW = \"8rem\" \n                            minH = \"10rem\"\n                            align=\"center\"\n                            shadow=\"5\"\n                            border=\"3px solid\"\n                            borderColor=\"gray400\"\n                          >\n                            <Button\n                            onClick={(e) => {\n                              e.preventDefault();\n                              window.location.href=\"https://github.com/agelas\"\n                            }}\n                            prefix={\n                              <Icon\n                                name=\"Github\"\n                                size=\"30px\"\n                                color=\"white\"\n                                m={{r: \"0.5rem\"}}\n                              />\n                            }\n                            bg=\"info600\"\n                            rounded=\"circle\"\n                            p={{r:\"1.5rem\", l: \"1rem\"}}\n                            shadow=\"3\"\n                            hoverShadow=\"4\"\n                            >\n                              Github\n                            </Button> \n                          </Div>\n                        </Col>\n                        <Col size=\"4\" bg = \"sucess100\" p=\"4rem\">\n                          <Div \n                            d = \"flex\"\n                            p=\"1rem\"\n                            bg = \"sucess100\" \n                            hoverBg = \"gray500\"\n                            rounded = \"md\" \n                            minW = \"8rem\" \n                            minH = \"10rem\" \n                            align = \"center\"\n                            shadow=\"5\"\n                            border=\"3px solid\"\n                            borderColor=\"gray400\"\n                          >\n                            <Button\n                            onClick = {(e) =>{\n                              e.preventDefault();\n                              window.location.href=\"https://www.linkedin.com/in/mathias-insley/\"\n                            }}\n                              prefix={\n                                <Icon\n                                  name=\"Linkedin\"\n                                  size=\"20px\"\n                                  color=\"white\"\n                                  m={{r: \"0.5rem\"}}\n                                />\n                              }\n                              bg=\"info600\"\n                              rounded=\"circle\"\n                              p={{r:\"1.5rem\", l: \"1rem\"}}\n                              shadow=\"3\"\n                              hoverShadow=\"4\"\n                            >\n                              LinkedIn\n                            </Button>\n                          </Div>\n                        </Col>\n                    </Row>\n                  }\n                  </Container>\n                </Route>\n                <Route path=\"/About\" component={About}/>\n                <Route component={NotFound}/>\n              </Switch>\n            </Router>\n        </ThemeProvider>\n      </StyletronProvider>\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}